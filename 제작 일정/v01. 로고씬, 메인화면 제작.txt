
로고씬, 메인화면 제작
 - 게임을 실행하면 나오는 장면 -> 배경화면 위에 : 싱글 게임/멀티 플레이/에디터/나가기 선택 장면, 선택을 위해 해당 rect에 마우스를 올리면, 움직이는 이미지가 뜬다.


1. 씬 매니저를 만든다.

2. 씬 매니저를 통해 시작화면(logo), 인게임 선택장면까지 구현

3. 인게임 선택 장면에선 마우스와 rect충돌로 충돌시 움직이는 이미지 적용

4. logo화면 이후, 로딩화면을 만들어 사용할 이미지 로딩을 한다.

5. 로딩 이후 인게임 선택장면(메인게임) 나오게하기



이미지의 로드는 리소스 매니저에서 관리

로드된 이미지는 비트맵 매니저에서 관리

선택은 버튼을 구현하여 버튼에 마우스를 올리면 이미지 출력, 누르면 장면 이동


싱글플레이 - 35장
싱글플레이 마우스 - 60장

에디터 - 85장
에디터 마우스 - 20장

나가기 - 50장
나가기 마우스 - 30장


버튼 : 자체 애니메이션을 가진다. + 마우스와 충돌시 추가 애니메이션을 그린다. + 눌리면 다른 장면으로 변화하는 역할을 가진다.

1. 자체 애니메이션
2. 추가 애니메이션
3. 이동할 장면

분류는 keyFrame값으로


ps. 버튼은 이미지를 각 1장씩만 가지게 한다. 2021/12/24일 현재는 버튼이 여러장의 정보를 가지고 있음.
이를 고쳐서 1장의 이미지만 가지게 하고, 여러장을 겹쳐야할 때는 여러 버튼을 한꺼번에 처리하도록 한다.
마우스의 충돌하는 버튼과 그렇지 않은 버튼으로 버튼의 종류를 나눈다.


버튼의 설계
1. 마우스와 상호작용하는 버튼
 - 누를시 특정 행위를 한다.
 - 맵을 이동하거나 다른 창을 연다거나

2. 마우스와 상호작용하지 않는 버튼
 - 제자리에서 애니메이션만 보여준다.

3. 버튼은 다른 씬에서는 활성화가 되면 안된다.
 - 버튼 활성화 / 비활성화를 만든다.

4. 버튼의 관리는 한꺼번에 되기 때문에 특정 정보를 알아야 버튼을 찾을 수 있다.
 - TCHAR 문자열로 KEY를 만들어 찾는다.

오브젝트 설계
 - 움직이는 오브젝트 : 유닛, 건물
 - 움직이지 않는 오브젝트 : 타일

애니메이션 오브젝트



